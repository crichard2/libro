# usando pycharm

#stacks! estructura de datos de la forma LIFO

class Stack:
    def __init__(self):
        self.items = []

    def is_empty(self):
        return self.items == []

    def push(self, item):
        self.items.append(item)

    def pop(self):
        return self.items.pop()

    def peek(self):
        last = len(self.items)-1
        return self.items[last]

    def size(self):
        return len(self.items)

stack = Stack()
print(stack.is_empty())
stack.push(1)
print(stack.is_empty())
item = stack.pop()
print(item)
for i in range(0,6):
    stack.push(i)
print(stack.peek())
print(stack.size())

#dando vuelta un strink con stacks

stack1 = Stack()
for c in "Paralelepipedo":
    stack1.push(c)

reverse = ""
for i in range(len(stack1.items)):
    reverse += stack1.pop()

print(reverse)

#challenges

stack2 = Stack()
for c in [1,2,3,4,5]:
    stack2.push(c)

reverse = []
for i in range(len(stack2.items)):
    reverse.append(stack2.pop())

print(reverse)


